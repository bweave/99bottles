exit
starting.downto(ending).reduce("") {|sum, i| sum << verse(i)}
starting.downto(ending).map {|i| i}
starting.downto(ending).map {|i| print i}
starting.downto(ending).each {|i| print i}
starting.downto(ending).each(&:to_s)
starting.downto(ending - 10).each(&:to_s)
starting.downto(ending - 1).each(&:to_s)
starting.downto(ending).each(&:to_s)
starting.downto(ending)
ending
starting
exit
continue
@bottles
continue
@bottles
bottles
continue
second_line
first_line
bottles
continue
verses
continue
verses
exit
(v2..v1).to_a
v2
v1
verses
exit
continue
verses
args
continue
args.map {|v| verse(v)}.join.to_s
args.map {|v| verse(v)}.join
args.map {|v| verse(v)}.to_s
args.map {|v| verse(v)}
args.each {|v| verse(v)}
args.class
args
